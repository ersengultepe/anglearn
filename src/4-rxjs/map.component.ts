import {Component, OnInit} from '@angular/core';
import {PostService} from '../1-lifecycle-hooks/3-ngOnInit/post.service';
import {fromEvent, map, take} from 'rxjs';

@Component({
  selector: 'app-rxjs-map',
  standalone: true,
  template: `
  `
})

export class MapComponent implements OnInit{
  /**
   * RxJS map OperatÃ¶rÃ¼ (GÃ¼ncel ve DetaylÄ± AÃ§Ä±klama)
   *
   * ğŸ“Œ map OperatÃ¶rÃ¼ Nedir?
   * ğŸ”¹ map operatÃ¶rÃ¼, gelen veriyi dÃ¶nÃ¼ÅŸtÃ¼rmek iÃ§in kullanÄ±lan bir RxJS pipeable operatÃ¶rÃ¼dÃ¼r.
   * ğŸ”¹ Bir Observableâ€™dan gelen her veriyi baÅŸka bir formata dÃ¶nÃ¼ÅŸtÃ¼rerek yeni bir Observable dÃ¶ndÃ¼rÃ¼r.
   * ğŸ”¹ Array.prototype.map() metoduna benzer ÅŸekilde Ã§alÄ±ÅŸÄ±r, ancak rxjs observable akÄ±ÅŸÄ± iÃ§inde kullanÄ±lÄ±r.
   *
   * ğŸ›  KullanÄ±m FormatÄ±
   * observable.pipe(
   *   map(value => yeniDeÄŸer)
   * )
   * ğŸ“Œ Ne yapar?
   *
   * observable akÄ±ÅŸÄ±ndan gelen her Ã¶ÄŸeyi alÄ±r.
   * value parametresiyle iÅŸlem yapar.
   * Sonucu yeni bir observable olarak yayar.
   *
   * âœ… Temel KullanÄ±m
   * of(1, 2, 3).pipe(
   *   map(x => x * 10) // Her deÄŸeri 10 ile Ã§arpar
   * ).subscribe(console.log);
   *
   */
  constructor(private postService:PostService) { }

  ngOnInit(): void {
    this.getPosts();
  }

  private getPosts() {
    this.postService.getPosts()
      .pipe(
        map(posts => posts.slice(0, 5).map(post => post.title)),
      )
      .subscribe({
        next: data => console.log(data),
        error: err => console.log("Hata oluÅŸtu", err),
        complete: () => console.log('api Ã§aÄŸrÄ±sÄ± sonlandÄ± !!!')
      })
  }
}
